//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZadaniaWPF.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TasksWpfEntities1 : DbContext
    {
        public TasksWpfEntities1()
            : base("name=TasksWpfEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DictTaskEventType> DictTaskEventTypes { get; set; }
        public virtual DbSet<TaskPriority> TaskPriorities { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TasksHistory> TasksHistories { get; set; }
    
        public virtual int TaskDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaskDelete", idParameter);
        }
    
        public virtual int TaskHistoryCreate(Nullable<int> taskId, Nullable<int> eventType)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            var eventTypeParameter = eventType.HasValue ?
                new ObjectParameter("eventType", eventType) :
                new ObjectParameter("eventType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaskHistoryCreate", taskIdParameter, eventTypeParameter);
        }
    
        public virtual ObjectResult<TaskList_Result> TaskList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaskList_Result>("TaskList");
        }
    
        public virtual ObjectResult<Nullable<decimal>> TaskSave(Nullable<int> id, string name, Nullable<int> priority, Nullable<System.DateTime> maxDate, Nullable<bool> realized)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(int));
    
            var maxDateParameter = maxDate.HasValue ?
                new ObjectParameter("maxDate", maxDate) :
                new ObjectParameter("maxDate", typeof(System.DateTime));
    
            var realizedParameter = realized.HasValue ?
                new ObjectParameter("realized", realized) :
                new ObjectParameter("realized", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("TaskSave", idParameter, nameParameter, priorityParameter, maxDateParameter, realizedParameter);
        }
    }
}
